name: CI - Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # schedule:
  #   - cron: '0 */5 * * *'  # Every 5 hours (UTC)

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Restore node_modules and playwright cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-node18-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

  run-tests:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore node_modules and playwright cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-node18-${{ hashFiles('**/package-lock.json') }}

      - name: Run Playwright Tests
        run: npx playwright test --reporter=html,line
        continue-on-error: true

      - name: Upload HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report
          path: playwright-report/

      - name: Upload Trace Files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: test-results/**/trace.zip

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots
          path: test-results/**/screenshot*

      - name: Summarize and Post Test Results
        if: always()
        run: |
          echo "### Playwright Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Tests completed. Download the [HTML Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) from artifacts." >> $GITHUB_STEP_SUMMARY

  teardown:
    runs-on: ubuntu-latest
    needs: run-tests
    if: always()
    steps:
      - name: Cleanup Playwright Artifacts
        run: |
          echo "🔧 Cleaning up Playwright test artifacts..."
          rm -rf /tmp/playwright* test-results/ playwright-report/
          echo "✅ Playwright artifacts cleaned."

      - name: Stop and Remove Docker Containers
        run: |
          echo "🛑 Checking for running Docker containers..."
          containers=$(docker ps -aq)
          if [ -n "$containers" ]; then
            echo "🛑 Stopping and removing leftover containers..."
            docker stop $containers || true
            docker rm $containers || true
            echo "✅ Docker containers cleaned."
          else
            echo "✅ No running Docker containers found."
          fi

      - name: Post Teardown Summary
        run: |
          echo "### Teardown Summary" >> $GITHUB_STEP_SUMMARY
          if [ -d "playwright-report" ]; then
            echo "✅ HTML report was generated and cleaned up." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ HTML report was not found during teardown." >> $GITHUB_STEP_SUMMARY

